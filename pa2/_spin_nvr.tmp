never ltl_0 {    /* !([] (! (((((((((((((((((((stones[0]==female)) && ((stones[1]==female))) && ((stones[2]==female))) && ((stones[3]==female))) && ((stones[4]==female))) && ((stones[5]==female))) && ((stones[6]==female))) && ((stones[7]==female))) && ((stones[8]==female))) && ((stones[10]==male))) && ((stones[11]==male))) && ((stones[12]==male))) && ((stones[13]==male))) && ((stones[14]==male))) && ((stones[15]==male))) && ((stones[16]==male))) && ((stones[17]==male))) && ((stones[18]==male))))) */
T0_init:
	do
	:: atomic { (! ((! (((((((((((((((((((stones[0]==female)) && ((stones[1]==female))) && ((stones[2]==female))) && ((stones[3]==female))) && ((stones[4]==female))) && ((stones[5]==female))) && ((stones[6]==female))) && ((stones[7]==female))) && ((stones[8]==female))) && ((stones[10]==male))) && ((stones[11]==male))) && ((stones[12]==male))) && ((stones[13]==male))) && ((stones[14]==male))) && ((stones[15]==male))) && ((stones[16]==male))) && ((stones[17]==male))) && ((stones[18]==male)))))) -> assert(!(! ((! (((((((((((((((((((stones[0]==female)) && ((stones[1]==female))) && ((stones[2]==female))) && ((stones[3]==female))) && ((stones[4]==female))) && ((stones[5]==female))) && ((stones[6]==female))) && ((stones[7]==female))) && ((stones[8]==female))) && ((stones[10]==male))) && ((stones[11]==male))) && ((stones[12]==male))) && ((stones[13]==male))) && ((stones[14]==male))) && ((stones[15]==male))) && ((stones[16]==male))) && ((stones[17]==male))) && ((stones[18]==male))))))) }
	:: (1) -> goto T0_init
	od;
accept_all:
	skip
}
