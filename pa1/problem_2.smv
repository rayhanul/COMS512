
MODULE main

 
VAR 
	x: { isi, iju };
	y: { isi, iju };
	z: { isi, iju };
	xp : { isi, iju };
	yp :{ isi, iju };
	zp : { isi, iju };

	driver : {mv_x, mv_y, mv_z, mv_xp, mv_yp, mv_zp};
	passenger : {mv_x, mv_y, mv_z, mv_xp, mv_yp, mv_zp};

	vessel : {isi, iju};

	
	

ASSIGN
	init(x) := isi;
	init(y) := isi;
	init(z) := isi;
	init(xp) := isi;
	init(yp) := isi;
	init(zp) := isi;
	init(vessel) := isi ;

	next(vessel):= case 
			
			vessel=isi & vessel =x & driver =mv_x & passenger != mv_yp & passenger != mv_zp : iju;
			vessel=isi & vessel =y & driver =mv_y & passenger != mv_xp & passenger != mv_zp : iju;
			vessel=isi & vessel =z & driver =mv_z & passenger != mv_xp & passenger != mv_yp : iju;
			vessel=isi & vessel =xp & driver =mv_xp & passenger != mv_y & passenger != mv_z : iju;
			vessel=isi & vessel =yp & driver =mv_yp & passenger != mv_x & passenger != mv_z : iju;
			vessel=isi & vessel =zp & driver =mv_zp & passenger != mv_x & passenger != mv_y : iju;

			vessel=iju & vessel =x & driver =mv_x & passenger != mv_yp & passenger != mv_zp : isi;
			vessel=iju & vessel =y & driver =mv_y & passenger != mv_xp & passenger != mv_zp : isi;
			vessel=iju & vessel =z & driver =mv_z & passenger != mv_xp & passenger != mv_yp : isi;
			vessel=iju & vessel =xp & driver =mv_xp & passenger != mv_y & passenger != mv_z : isi;
			vessel=iju & vessel =yp & driver =mv_yp & passenger != mv_x & passenger != mv_z : isi;
			vessel=iju & vessel =zp & driver =mv_zp & passenger != mv_x & passenger != mv_y : isi;

			TRUE:vessel;
	esac;

	next(x):= case
			driver=mv_x &  passenger != mv_yp & passenger != mv_zp & x=vessel & x=isi : iju;
			driver=mv_x &  passenger != mv_yp & passenger != mv_zp & x=vessel & x=iju : isi;

			passenger=mv_x &  driver != mv_yp & driver != mv_zp & x=vessel & x = isi : iju;
			passenger=mv_x &  driver != mv_yp & driver != mv_zp & x=vessel & x = iju : isi;			

			TRUE: x;
	esac;

	next(y):= case
			driver=mv_y &  passenger != mv_xp & passenger != mv_zp & y=vessel & y=isi: iju;
			driver=mv_y &  passenger != mv_xp & passenger != mv_zp & y=vessel & y=iju: isi;

			passenger=mv_y &  driver != mv_xp & driver != mv_zp & y=vessel & y= isi: iju;
			passenger=mv_y &  driver != mv_xp & driver != mv_zp & y=vessel & y= iju: isi;
			TRUE: y;
	esac;

	next(z):= case
			driver=mv_z &  passenger != mv_xp & passenger != mv_yp & z=vessel & z=isi: iju;
			driver=mv_z &  passenger != mv_xp & passenger != mv_yp & z=vessel & z=iju: isi;

			passenger=mv_z &  driver != mv_xp & driver != mv_yp & z=vessel & z=isi : iju;
			passenger=mv_z &  driver != mv_xp & driver != mv_yp & z=vessel & z=iju : isi;
			TRUE: z ; 
	esac;

	next(xp):= case
			driver=mv_xp &  passenger != mv_y & passenger != mv_z & xp=vessel & xp=isi: iju;
			driver=mv_xp &  passenger != mv_y & passenger != mv_z & xp=vessel & xp=iju: isi;

			passenger=mv_xp &  driver != mv_y & driver != mv_z & xp=vessel & xp=isi: iju;
			passenger=mv_xp &  driver != mv_y & driver != mv_z & xp=vessel & xp=iju: isi;

		TRUE: xp ; 
	esac;

	next(yp):= case
			driver=mv_yp &  passenger != mv_x & passenger != mv_z & yp=vessel & yp=isi: iju;
			driver=mv_yp &  passenger != mv_x & passenger != mv_z & yp=vessel & yp=iju: isi;

			passenger=mv_yp &  driver != mv_x & driver != mv_z & yp=vessel & yp=isi: iju;
			passenger=mv_yp &  driver != mv_x & driver != mv_z & yp=vessel & yp=iju: isi;

		TRUE: yp ; 
	esac;

	next(zp):= case
			driver=mv_zp &  passenger != mv_x & passenger != mv_y & zp=vessel & zp=isi: iju;
			driver=mv_zp &  passenger != mv_x & passenger != mv_y & zp=vessel & zp=iju: isi;

			passenger=mv_zp &  driver != mv_x & driver != mv_z & zp=vessel & zp=isi: iju;
			passenger=mv_zp &  driver != mv_x & driver != mv_z & zp=vessel & zp=iju: isi;
		TRUE: zp ; 
	esac;

--	next(driver):= case
--			x=vessel:mv_x;
--			y=vessel:mv_y;
--			z=vessel: mv_z;
--			xp=vessel: mv_xp;
--			yp=vessel:mv_yp;
--			zp=vessel:mv_zp;
--			TRUE:driver;
--	esac;

	--next(passenger):= case
	--		x=vessel:mv_x;
	--		y=vessel:mv_y;
	--		z=vessel: mv_z;
	--		xp=vessel: mv_xp;
	--		yp=vessel:mv_yp;
	--		zp=vessel:mv_zp;
	--		TRUE: passenger;
	--esac;

SPEC  !E [((((xp = y) | (xp =  z)) -> (xp = x)) & (((yp = x) | (yp = z)) -> (yp = y))  & (((zp = x) | (zp= y)) -> (zp = z)) ) U (x = iju & xp = iju & y = iju & yp = iju & z=iju & zp = iju)]
